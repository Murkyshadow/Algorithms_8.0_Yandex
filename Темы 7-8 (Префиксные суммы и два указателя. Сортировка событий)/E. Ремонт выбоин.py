# Для каждого учатка необходимо узнать сколько маршрутов через него проходит, ведь выгодней избавляться от ям,
# расположенных сразу на нескольких маршрутах. Для этого создадим массив (в котором будем хранить к скольки
# маршрутам относится каждый участок) и будем обрабатывать маршруты, записывая сколько маршрутов началось и
# закончилось в каждом участке, далее идем по этим парам обрабатывая след. образом:
# прибавили кол-во к текущему кол-ву маршрутов на данном участке кол-во, начавшихся маршрутов и записали в ответ
# потом вычли кол-во, закончившихся маршрутов и перешли к след. участку
# Так получили кол-во маршрутов для каждого учатска, потом сортируем этот массив (ведь нам надо убирать ямы на
# участках с наибольшим кол-вом маршрутов), но не забудьте перед сортировкой пронумеровать каждый участок дороги,
# далее идем по участкам с наибольшим кол-вом маршрутов и жадно (по максимому) заделываем в них ямы,
# после считаем итоговый ответ - сумма провизведение: sum(кол-во_маршрутов_на_участке × кол-во_оставшихся_ям)

n, m, remaining_repairs = map(int, input().split()) # количество участков трассы, маршрутов и количество выбоин, которые можно починить
pits_on_road = list(map(int, input().split()))  # количество выбоин на участках трассы
count_start_end_routes_on_road = [[0,0] for _ in range(n)]  # считаем кол-во начинающихся и заканчивающихся маршрутов на каждом участке (дороге)
START, END = 0, 1
for _ in range(m):
    l, r = map(int, input().split())
    count_start_end_routes_on_road[l-1][START] += 1
    count_start_end_routes_on_road[r-1][END] += 1

count_routes_on_road = []   # считаем кол-во маршрутов на каждом участке
now_routes = 0
i = 0
for count_start, count_end in count_start_end_routes_on_road:
    now_routes += count_start
    count_routes_on_road.append([now_routes, i])
    now_routes -= count_end
    i += 1

count_routes_on_road.sort(reverse=True) # сортируем кол-во маршрутов на каждом участке
ans = 0
for routes, ind_road in count_routes_on_road:   # жадно чиним ямы и считаем ответ
    if remaining_repairs > 0:   # можем чинить, тогда чиним
        if remaining_repairs > pits_on_road[ind_road]:  # починить можем больше чем ям на данном участке
            remaining_repairs -= pits_on_road[ind_road]
            pits_on_road[ind_road] = 0
        else:   # не можем починить все ямы на данном участке
            pits_on_road[ind_road] -= remaining_repairs
            remaining_repairs = 0

    ans += routes * pits_on_road[ind_road]  # дискомфорт = кол-ву ям умноженному на кол-во маршрутов на данном участке

print(ans)

